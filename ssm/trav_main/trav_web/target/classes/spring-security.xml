<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!--1.先指定放行的资源-->
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/favicon.ico" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>

    <!--2.配置SpringSecurity拦截的资源、登录表单、退出表单、登录失败对应的页面等。-->
    <security:http auto-config="true" use-expressions="true">
        <!--2.1 指定拦截的资源，以及要求访问这些资源的用户必须具有的权限。-->
        <!--
        use-expressions="false" 不使用SpEL表达式
            access="ROLE_ADMIN"  要求访问系统的用户必须包含ROLE_ADMIN角色
            access="ROLE_ADMIN,ROLE_USER" 要求访问系统的用户必须包含ROLE_ADMIN 或者 ROLE_USER角色
        use-expressions="true"  使用SpEL表达式
            access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')"
            access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"
        -->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>

        <!--2.2 配置自定义的登录页面-->
        <security:form-login
                 login-page="/login.jsp"
                 login-processing-url="/login"
                 username-parameter="username"
                 password-parameter="password"
                 default-target-url="/index.jsp"
                 authentication-failure-url="/failer.jsp"/>

        <!--2.3 配置退出-->
        <security:logout
                logout-url="/logout"
                logout-success-url="/login.jsp"
                invalidate-session="true"
        />

        <!--没有权限默认跳转到自定义的错误页面-->
        <security:access-denied-handler error-page="/403.jsp"/>

        <!--2.3 关闭csrf跨域请求-->
        <security:csrf disabled="true"/>

    </security:http>

    <!--3.认证管理器，配置登录认证时候调用的service。-->
    <security:authentication-manager>
        <!--user-service-ref 配置引用容器中的service类。-->
        <security:authentication-provider user-service-ref="userService">
            <!--指定登录时候使用的加密算法，这样在用户登录时候，springsecurity会自动对用户输入的密码进行加密。-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--配置Spring加密器-->
    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--
    权限校验：
    方式1：jsr-250
        开启权限校验注解支持:<security:global-method-security jsr250-annotations="enabled"/>
        使用注解：@RolesAllowed
    方式2：springsecurity框架提供的权限校验注解支持 (推荐)
        开启权限校验注解支持:<security:global-method-security secured-annotations="enabled"/>
        使用注解：@Secured
     方式3：SpEL 提供的权限校验注解支持 (推荐)
        开启权限校验注解支持:<security:global-method-security pre-post-annotations="enabled"/>
        使用注解：@PreAuthorize
    -->
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>










